{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StoresService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'http://localhost:3000/stores';\n  }\n  postStores(store) {\n    return this.http.post(this.baseURL, store);\n  }\n  getStoresList() {\n    return this.http.get(this.baseURL);\n  }\n  putStores(store) {\n    return this.http.put(this.baseURL + `/${store._id}`, store);\n  }\n  deleteStores(_id) {\n    return this.http.delete(this.baseURL + `/${_id}`);\n  }\n}\nStoresService.ɵfac = function StoresService_Factory(t) {\n  return new (t || StoresService)(i0.ɵɵinject(i1.HttpClient));\n};\nStoresService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoresService,\n  factory: StoresService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFf,YAAO,GAAG,8BAA8B;EAET;EAGxCC,UAAU,CAACC,KAAa;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,EAAEF,KAAK,CAAC;EAC5C;EAEAG,aAAa;IACX,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;EACpC;EAEAG,SAAS,CAACL,KAAa;IACrB,OAAO,IAAI,CAACF,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACJ,OAAO,GAAG,IAAIF,KAAK,CAACO,GAAG,EAAE,EAAEP,KAAK,CAAC;EAC7D;EAEAQ,YAAY,CAACD,GAAW;IACtB,OAAO,IAAI,CAACT,IAAI,CAACW,MAAM,CAAC,IAAI,CAACP,OAAO,GAAG,IAAIK,GAAG,EAAE,CAAC;EACnD;;AApBWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAc,SAAbd,aAAa;EAAAe,YAFZ;AAAM","names":["StoresService","constructor","http","postStores","store","post","baseURL","getStoresList","get","putStores","put","_id","deleteStores","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Hello\\Documents\\LAB\\MEANstack_crud\\frontend\\src\\app\\shared\\stores.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Observable, map } from 'rxjs';\r\n\r\nimport {Stores} from './stores.model'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StoresService {\r\n  readonly baseURL = 'http://localhost:3000/stores';\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  postStores(store: Stores) {\r\n    return this.http.post(this.baseURL, store);\r\n  }\r\n\r\n  getStoresList() {\r\n    return this.http.get(this.baseURL);\r\n  }\r\n\r\n  putStores(store: Stores) {\r\n    return this.http.put(this.baseURL + `/${store._id}`, store);\r\n  }\r\n\r\n  deleteStores(_id: string) {\r\n    return this.http.delete(this.baseURL + `/${_id}`);\r\n  }\r\n  \r\n  selectedStores: Stores;s\r\n  stores: Stores[];\r\n  \r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}